{"version":3,"sources":["../src/server.js"],"names":["app","os","require","networkInterfaces","set","process","env","PORT","locals","port","externalAddress","en0","address","wlp4s0","server","listen","get","stdout","write","console","log"],"mappings":";;;;;;AAIA;;;;AACA;;;;;;2cALA;;;;;uDAOe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAELA,eAFK,GAEC,wBAFD;AAGLC,cAHK,GAGAC,QAAQ,IAAR,CAHA;AAILC,6BAJK,GAIeF,GAAGE,iBAAH,EAJf;AAAA;AAAA,mBAML,oBAAK,EAAEH,QAAF,EAAL,CANK;;AAAA;;AAQXA,gBAAII,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBP,IAAIQ,MAAJ,CAAWC,IAA/C;;AAEIC,2BAVO;;;AAYX,gBAAIP,kBAAkBQ,GAAlB,KAA0B,IAA9B,EAAoC;AAClCD,gCAAkBP,kBAAkBQ,GAAlB,CAAsB,CAAtB,EAAyBC,OAA3C;AACD,aAFD,MAEO,IAAIT,kBAAkBU,MAAtB,EAA8B;AACnCH,gCAAkBP,kBAAkBU,MAAlB,CAAyB,CAAzB,EAA4BD,OAA9C;AACD;;AAEKE,mBAlBK,GAkBId,IAAIe,MAAJ,CAAWf,IAAIgB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC/C,kBAAMP,OAAOK,QAAOF,OAAP,GAAiBH,IAA9B;;AAEAJ,sBAAQY,MAAR,CAAeC,KAAf,uCAC2BlB,IAAIgB,GAAJ,CAAQ,KAAR,CAD3B,4DAEwCP,IAFxC,WAGJC,kBACI,gCAAgC,SAAhC,GAA4CA,eAA5C,GAA8D,GAA9D,GAAoED,IADxE,GAEI,EALA,yDAOwCA,IAPxC,mBAQJC,kBACI,gCAAgC,SAAhC,GAA4CA,eAA5C,GAA8D,GAA9D,GAAoED,IAApE,GAA2E,UAD/E,GAEI,EAVA;AAaD,aAhBc,CAlBJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoCXU,oBAAQC,GAAR;;AApCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeN,M;;;;SAAAA,M","file":"server.js","sourcesContent":["/*\n* Application Server\n*/\n\nimport express from 'express';\nimport main from './main';\n\nexport default async function server () {\n  try {\n    const app = express();\n    const os = require('os');\n    const networkInterfaces = os.networkInterfaces();\n\n    await main({ app });\n\n    app.set('port', process.env.PORT || app.locals.port);\n\n    let externalAddress;\n\n    if (networkInterfaces.en0 === true) {\n      externalAddress = networkInterfaces.en0[0].address;\n    } else if (networkInterfaces.wlp4s0) {\n      externalAddress = networkInterfaces.wlp4s0[0].address;\n    }\n\n    const server = app.listen(app.get('port'), () => {\n      const port = server.address().port;\n\n      process.stdout.write(`\nGuru Express server started in ${app.get('env')} mode.\n - IDE address           = http://localhost:${port}\n${externalAddress\n    ? ' - External IDE address  = ' + 'http://' + externalAddress + ':' + port\n    : ''}\n\n - GraphQL endpoint:     = http://localhost:${port}/graphql\n${externalAddress\n    ? ' - External IDE endpoint = ' + 'http://' + externalAddress + ':' + port + '/graphql'\n    : ''}\n\n`);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n"]}