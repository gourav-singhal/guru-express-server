{"version":3,"sources":["../../../../../src/modules/ide/ide-query/resolver/resolverMutation-ide-query.js"],"names":["rm","fs","promisifyAll","require","ideQueryCollectionClear","obj","args","context","ideQueryCreate","data","created","Date","toISOString","writeFileAsync","id","JSON","stringify","then","RESULTS_","result","catch","console","log","error","type","message","ideQueryRemove"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;IAEQA,E,qBAAAA,E;;AACR,IAAMC,KAAK,mBAASC,YAAT,CAAsBC,QAAQ,IAAR,CAAtB,CAAX;;kBAEe;AACbC,yBADa,mCACYC,GADZ,EACiBC,IADjB,EACuBC,OADvB,EACgC;AAC3CP,OAAG,IAAH;AACD,GAHY;AAKbQ,gBALa,0BAKGH,GALH,EAKQC,IALR,EAKcC,OALd,EAKuB;AAClC,QAAME,oBACDH,IADC;AAEJI,eAAS,IAAIC,IAAJ,GAAWC,WAAX;AAFL,MAAN;;AAKA,WAAOX,GACJY,cADI,oCAEmBP,KAAKQ,EAFxB,kBAGHC,KAAKC,SAAL,CAAeP,IAAf,CAHG,EAKJQ,IALI,CAKC,YAAM;AACV,aAAO;AACLC,kBAAU;AACRC,kBAAQ;AADA;AADL,OAAP;AAKD,KAXI,EAYJC,KAZI,CAYE,iBAAS;AACdC,cAAQC,GAAR,CAAYC,KAAZ;;AAEA,aAAO;AACLL,kBAAU;AACRC,kBAAQ,IADA;AAERI,iBAAO;AACLC,kBAAM,kBADD;AAELC,qBAAS;AAFJ;AAFC;AADL,OAAP;AASD,KAxBI,CAAP;AAyBD,GApCY;AAsCbC,gBAtCa,0BAsCGrB,GAtCH,EAsCQC,IAtCR,EAsCcC,OAtCd,EAsCuB,CAAE;AAtCzB,C","file":"resolverMutation-ide-query.js","sourcesContent":["'use strict';\n\nimport Bluebird from 'bluebird';\nimport shell from 'shelljs';\nimport { QUERY_DIRECTORY } from '../../../constants';\n\nconst { rm } = shell;\nconst fs = Bluebird.promisifyAll(require('fs'));\n\nexport default {\n  ideQueryCollectionClear (obj, args, context) {\n    rm('-r', QUERY_DIRECTORY);\n  },\n\n  ideQueryCreate (obj, args, context) {\n    const data = {\n      ...args,\n      created: new Date().toISOString()\n    };\n\n    return fs\n      .writeFileAsync(\n        `${QUERY_DIRECTORY}/${args.id}-query.json`,\n        JSON.stringify(data)\n      )\n      .then(() => {\n        return {\n          RESULTS_: {\n            result: 'ok'\n          }\n        };\n      })\n      .catch(error => {\n        console.log(error);\n\n        return {\n          RESULTS_: {\n            result: 'ok',\n            error: {\n              type: 'QUERY_SAVE_ERROR',\n              message: 'Query did not save'\n            }\n          }\n        };\n      });\n  },\n\n  ideQueryRemove (obj, args, context) {}\n};\n"]}