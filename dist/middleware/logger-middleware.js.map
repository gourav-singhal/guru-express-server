{"version":3,"sources":["../../src/middleware/logger-middleware.js"],"names":["logger","dest","process","cwd","app","ACCESS_LOG","ERROR_LOG","accessLogStream","createWriteStream","flags","use","stream","get","tsFormat","Date","Logger","transports","Console","timestamp","colorize","File","filename","join","__dirname","locals","log","level"],"mappings":";;;;;kBAWwBA,M;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAPA;;;;AASA,IAAMC,OAAUC,QAAQC,GAAR,EAAV,UAAN;;AAEe,SAASH,MAAT,CAAiBI,GAAjB,EAAsB;AACnC,MAAMC,aAAgBJ,IAAhB,gBAAN;AACA,MAAMK,YAAeL,IAAf,eAAN;;AAEA;AACA,MAAIM,kBAAkB,aAAGC,iBAAH,CAAqBH,UAArB,EAAiC,EAAEI,OAAO,GAAT,EAAjC,CAAtB;;AAEA;AACAL,MAAIM,GAAJ,CAAQ,sBAAO,UAAP,EAAmB,EAAEC,QAAQJ,eAAV,EAAnB,CAAR;;AAEA,MAAIH,IAAIQ,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpCR,QAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACD;;AAED;AACA,MAAMG,WAAW,SAAXA,QAAW;AAAA,WAAO,IAAIC,IAAJ,EAAP;AAAA,GAAjB;;AAEA,MAAMd,SAAS,IAAK,kBAAQe,MAAb,CAAqB;AAClCC,gBAAY,CACV,IAAK,kBAAQA,UAAR,CAAmBC,OAAxB,CAAiC;AAC/BC,iBAAWL,QADoB;AAE/BM,gBAAU;AAFqB,KAAjC,CADU,EAKV,IAAK,kBAAQH,UAAR,CAAmBI,IAAxB,CAA8B;AAC5BC,gBAAU,eAAKC,IAAL,CAAUC,SAAV,EAAqBjB,SAArB,CADkB;AAE5BY,iBAAWL;AAFiB,KAA9B,CALU;AADsB,GAArB,CAAf;;AAaAT,MAAIoB,MAAJ,CAAWxB,MAAX,GAAoB,UAAUyB,GAAV,EAAeC,KAAf,EAAsB;AACxC;AACA1B,WAAOyB,GAAP,CAAW,MAAX,EAAmBA,GAAnB;AACD,GAHD;AAID","file":"logger-middleware.js","sourcesContent":["/*\n* Application logger\n*/\n\nimport morgan from 'morgan';\nimport fs from 'fs';\nimport path from 'path';\nimport winston from 'winston';\n\nconst dest = `${process.cwd()}/logs`;\n\nexport default function logger (app) {\n  const ACCESS_LOG = `${dest}/access.log`;\n  const ERROR_LOG = `${dest}/error.log`;\n\n  // create a write stream (in append mode)\n  let accessLogStream = fs.createWriteStream(ACCESS_LOG, { flags: 'a' });\n\n  // setup the logger\n  app.use(morgan('combined', { stream: accessLogStream }));\n  \n  if (app.get('env') === 'development') {\n    app.use(morgan('dev'));\n  }\n\n  // Error logger\n  const tsFormat = () => (new Date());\n  \n  const logger = new (winston.Logger)({\n    transports: [\n      new (winston.transports.Console)({\n        timestamp: tsFormat,\n        colorize: true\n      }),\n      new (winston.transports.File)({\n        filename: path.join(__dirname, ERROR_LOG),\n        timestamp: tsFormat\n      })\n    ]\n  });\n\n  app.locals.logger = function (log, level) {\n    // const logLevel = level || env === 'production' ? 'info' : 'verbose';\n    logger.log('info', log);\n  };\n};\n\n"]}